
bomb：     文件格式 elf32-i386


Disassembly of section .init:

080486f4 <_init>:
 80486f4:	53                   	push   %ebx
 80486f5:	83 ec 08             	sub    $0x8,%esp
 80486f8:	e8 13 02 00 00       	call   8048910 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 39 00 00    	add    $0x3903,%ebx
 8048703:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048709:	85 c0                	test   %eax,%eax
 804870b:	74 05                	je     8048712 <_init+0x1e>
 804870d:	e8 be 01 00 00       	call   80488d0 <__sprintf_chk@plt+0x10>
 8048712:	83 c4 08             	add    $0x8,%esp
 8048715:	5b                   	pop    %ebx
 8048716:	c3                   	ret    

Disassembly of section .plt:

08048720 <read@plt-0x10>:
 8048720:	ff 35 04 c0 04 08    	pushl  0x804c004
 8048726:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804872c:	00 00                	add    %al,(%eax)
	...

08048730 <read@plt>:
 8048730:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8048736:	68 00 00 00 00       	push   $0x0
 804873b:	e9 e0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048740 <fflush@plt>:
 8048740:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8048746:	68 08 00 00 00       	push   $0x8
 804874b:	e9 d0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048750 <fgets@plt>:
 8048750:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8048756:	68 10 00 00 00       	push   $0x10
 804875b:	e9 c0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048760 <signal@plt>:
 8048760:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8048766:	68 18 00 00 00       	push   $0x18
 804876b:	e9 b0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048770 <sleep@plt>:
 8048770:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8048776:	68 20 00 00 00       	push   $0x20
 804877b:	e9 a0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048780 <alarm@plt>:
 8048780:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8048786:	68 28 00 00 00       	push   $0x28
 804878b:	e9 90 ff ff ff       	jmp    8048720 <_init+0x2c>

08048790 <__stack_chk_fail@plt>:
 8048790:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8048796:	68 30 00 00 00       	push   $0x30
 804879b:	e9 80 ff ff ff       	jmp    8048720 <_init+0x2c>

080487a0 <strcpy@plt>:
 80487a0:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80487a6:	68 38 00 00 00       	push   $0x38
 80487ab:	e9 70 ff ff ff       	jmp    8048720 <_init+0x2c>

080487b0 <getenv@plt>:
 80487b0:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 80487b6:	68 40 00 00 00       	push   $0x40
 80487bb:	e9 60 ff ff ff       	jmp    8048720 <_init+0x2c>

080487c0 <puts@plt>:
 80487c0:	ff 25 30 c0 04 08    	jmp    *0x804c030
 80487c6:	68 48 00 00 00       	push   $0x48
 80487cb:	e9 50 ff ff ff       	jmp    8048720 <_init+0x2c>

080487d0 <__memmove_chk@plt>:
 80487d0:	ff 25 34 c0 04 08    	jmp    *0x804c034
 80487d6:	68 50 00 00 00       	push   $0x50
 80487db:	e9 40 ff ff ff       	jmp    8048720 <_init+0x2c>

080487e0 <exit@plt>:
 80487e0:	ff 25 38 c0 04 08    	jmp    *0x804c038
 80487e6:	68 58 00 00 00       	push   $0x58
 80487eb:	e9 30 ff ff ff       	jmp    8048720 <_init+0x2c>

080487f0 <__libc_start_main@plt>:
 80487f0:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 80487f6:	68 60 00 00 00       	push   $0x60
 80487fb:	e9 20 ff ff ff       	jmp    8048720 <_init+0x2c>

08048800 <write@plt>:
 8048800:	ff 25 40 c0 04 08    	jmp    *0x804c040
 8048806:	68 68 00 00 00       	push   $0x68
 804880b:	e9 10 ff ff ff       	jmp    8048720 <_init+0x2c>

08048810 <__isoc99_sscanf@plt>:
 8048810:	ff 25 44 c0 04 08    	jmp    *0x804c044
 8048816:	68 70 00 00 00       	push   $0x70
 804881b:	e9 00 ff ff ff       	jmp    8048720 <_init+0x2c>

08048820 <fopen@plt>:
 8048820:	ff 25 48 c0 04 08    	jmp    *0x804c048
 8048826:	68 78 00 00 00       	push   $0x78
 804882b:	e9 f0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048830 <__errno_location@plt>:
 8048830:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 8048836:	68 80 00 00 00       	push   $0x80
 804883b:	e9 e0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048840 <__printf_chk@plt>:
 8048840:	ff 25 50 c0 04 08    	jmp    *0x804c050
 8048846:	68 88 00 00 00       	push   $0x88
 804884b:	e9 d0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048850 <socket@plt>:
 8048850:	ff 25 54 c0 04 08    	jmp    *0x804c054
 8048856:	68 90 00 00 00       	push   $0x90
 804885b:	e9 c0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048860 <__fprintf_chk@plt>:
 8048860:	ff 25 58 c0 04 08    	jmp    *0x804c058
 8048866:	68 98 00 00 00       	push   $0x98
 804886b:	e9 b0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048870 <gethostbyname@plt>:
 8048870:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 8048876:	68 a0 00 00 00       	push   $0xa0
 804887b:	e9 a0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048880 <strtol@plt>:
 8048880:	ff 25 60 c0 04 08    	jmp    *0x804c060
 8048886:	68 a8 00 00 00       	push   $0xa8
 804888b:	e9 90 fe ff ff       	jmp    8048720 <_init+0x2c>

08048890 <connect@plt>:
 8048890:	ff 25 64 c0 04 08    	jmp    *0x804c064
 8048896:	68 b0 00 00 00       	push   $0xb0
 804889b:	e9 80 fe ff ff       	jmp    8048720 <_init+0x2c>

080488a0 <close@plt>:
 80488a0:	ff 25 68 c0 04 08    	jmp    *0x804c068
 80488a6:	68 b8 00 00 00       	push   $0xb8
 80488ab:	e9 70 fe ff ff       	jmp    8048720 <_init+0x2c>

080488b0 <__ctype_b_loc@plt>:
 80488b0:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 80488b6:	68 c0 00 00 00       	push   $0xc0
 80488bb:	e9 60 fe ff ff       	jmp    8048720 <_init+0x2c>

080488c0 <__sprintf_chk@plt>:
 80488c0:	ff 25 70 c0 04 08    	jmp    *0x804c070
 80488c6:	68 c8 00 00 00       	push   $0xc8
 80488cb:	e9 50 fe ff ff       	jmp    8048720 <_init+0x2c>

Disassembly of section .plt.got:

080488d0 <.plt.got>:
 80488d0:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 80488d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080488e0 <_start>:
 80488e0:	31 ed                	xor    %ebp,%ebp
 80488e2:	5e                   	pop    %esi
 80488e3:	89 e1                	mov    %esp,%ecx
 80488e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80488e8:	50                   	push   %eax
 80488e9:	54                   	push   %esp
 80488ea:	52                   	push   %edx
 80488eb:	68 90 9e 04 08       	push   $0x8049e90
 80488f0:	68 30 9e 04 08       	push   $0x8049e30
 80488f5:	51                   	push   %ecx
 80488f6:	56                   	push   %esi
 80488f7:	68 db 89 04 08       	push   $0x80489db
 80488fc:	e8 ef fe ff ff       	call   80487f0 <__libc_start_main@plt>
 8048901:	f4                   	hlt    
 8048902:	66 90                	xchg   %ax,%ax
 8048904:	66 90                	xchg   %ax,%ax
 8048906:	66 90                	xchg   %ax,%ax
 8048908:	66 90                	xchg   %ax,%ax
 804890a:	66 90                	xchg   %ax,%ax
 804890c:	66 90                	xchg   %ax,%ax
 804890e:	66 90                	xchg   %ax,%ax

08048910 <__x86.get_pc_thunk.bx>:
 8048910:	8b 1c 24             	mov    (%esp),%ebx
 8048913:	c3                   	ret    
 8048914:	66 90                	xchg   %ax,%ax
 8048916:	66 90                	xchg   %ax,%ax
 8048918:	66 90                	xchg   %ax,%ax
 804891a:	66 90                	xchg   %ax,%ax
 804891c:	66 90                	xchg   %ax,%ax
 804891e:	66 90                	xchg   %ax,%ax

08048920 <deregister_tm_clones>:
 8048920:	b8 a3 c3 04 08       	mov    $0x804c3a3,%eax
 8048925:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804892a:	83 f8 06             	cmp    $0x6,%eax
 804892d:	76 1a                	jbe    8048949 <deregister_tm_clones+0x29>
 804892f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048934:	85 c0                	test   %eax,%eax
 8048936:	74 11                	je     8048949 <deregister_tm_clones+0x29>
 8048938:	55                   	push   %ebp
 8048939:	89 e5                	mov    %esp,%ebp
 804893b:	83 ec 14             	sub    $0x14,%esp
 804893e:	68 a0 c3 04 08       	push   $0x804c3a0
 8048943:	ff d0                	call   *%eax
 8048945:	83 c4 10             	add    $0x10,%esp
 8048948:	c9                   	leave  
 8048949:	f3 c3                	repz ret 
 804894b:	90                   	nop
 804894c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048950 <register_tm_clones>:
 8048950:	b8 a0 c3 04 08       	mov    $0x804c3a0,%eax
 8048955:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804895a:	c1 f8 02             	sar    $0x2,%eax
 804895d:	89 c2                	mov    %eax,%edx
 804895f:	c1 ea 1f             	shr    $0x1f,%edx
 8048962:	01 d0                	add    %edx,%eax
 8048964:	d1 f8                	sar    %eax
 8048966:	74 1b                	je     8048983 <register_tm_clones+0x33>
 8048968:	ba 00 00 00 00       	mov    $0x0,%edx
 804896d:	85 d2                	test   %edx,%edx
 804896f:	74 12                	je     8048983 <register_tm_clones+0x33>
 8048971:	55                   	push   %ebp
 8048972:	89 e5                	mov    %esp,%ebp
 8048974:	83 ec 10             	sub    $0x10,%esp
 8048977:	50                   	push   %eax
 8048978:	68 a0 c3 04 08       	push   $0x804c3a0
 804897d:	ff d2                	call   *%edx
 804897f:	83 c4 10             	add    $0x10,%esp
 8048982:	c9                   	leave  
 8048983:	f3 c3                	repz ret 
 8048985:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048990 <__do_global_dtors_aux>:
 8048990:	80 3d c8 c3 04 08 00 	cmpb   $0x0,0x804c3c8
 8048997:	75 13                	jne    80489ac <__do_global_dtors_aux+0x1c>
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 08             	sub    $0x8,%esp
 804899f:	e8 7c ff ff ff       	call   8048920 <deregister_tm_clones>
 80489a4:	c6 05 c8 c3 04 08 01 	movb   $0x1,0x804c3c8
 80489ab:	c9                   	leave  
 80489ac:	f3 c3                	repz ret 
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <frame_dummy>:
 80489b0:	b8 10 bf 04 08       	mov    $0x804bf10,%eax
 80489b5:	8b 10                	mov    (%eax),%edx
 80489b7:	85 d2                	test   %edx,%edx
 80489b9:	75 05                	jne    80489c0 <frame_dummy+0x10>
 80489bb:	eb 93                	jmp    8048950 <register_tm_clones>
 80489bd:	8d 76 00             	lea    0x0(%esi),%esi
 80489c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80489c5:	85 d2                	test   %edx,%edx
 80489c7:	74 f2                	je     80489bb <frame_dummy+0xb>
 80489c9:	55                   	push   %ebp
 80489ca:	89 e5                	mov    %esp,%ebp
 80489cc:	83 ec 14             	sub    $0x14,%esp
 80489cf:	50                   	push   %eax
 80489d0:	ff d2                	call   *%edx
 80489d2:	83 c4 10             	add    $0x10,%esp
 80489d5:	c9                   	leave  
 80489d6:	e9 75 ff ff ff       	jmp    8048950 <register_tm_clones>

080489db <main>:
 80489db:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80489df:	83 e4 f0             	and    $0xfffffff0,%esp
 80489e2:	ff 71 fc             	pushl  -0x4(%ecx)
 80489e5:	55                   	push   %ebp
 80489e6:	89 e5                	mov    %esp,%ebp
 80489e8:	53                   	push   %ebx
 80489e9:	51                   	push   %ecx
 80489ea:	8b 01                	mov    (%ecx),%eax
 80489ec:	8b 59 04             	mov    0x4(%ecx),%ebx
 80489ef:	83 f8 01             	cmp    $0x1,%eax
 80489f2:	75 0c                	jne    8048a00 <main+0x25>
 80489f4:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 80489f9:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 80489fe:	eb 5b                	jmp    8048a5b <main+0x80>
 8048a00:	83 f8 02             	cmp    $0x2,%eax
 8048a03:	75 39                	jne    8048a3e <main+0x63>
 8048a05:	83 ec 08             	sub    $0x8,%esp
 8048a08:	68 c8 9e 04 08       	push   $0x8049ec8
 8048a0d:	ff 73 04             	pushl  0x4(%ebx)
 8048a10:	e8 0b fe ff ff       	call   8048820 <fopen@plt>
 8048a15:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048a1a:	83 c4 10             	add    $0x10,%esp
 8048a1d:	85 c0                	test   %eax,%eax
 8048a1f:	75 3a                	jne    8048a5b <main+0x80>
 8048a21:	ff 73 04             	pushl  0x4(%ebx)
 8048a24:	ff 33                	pushl  (%ebx)
 8048a26:	68 ca 9e 04 08       	push   $0x8049eca
 8048a2b:	6a 01                	push   $0x1
 8048a2d:	e8 0e fe ff ff       	call   8048840 <__printf_chk@plt>
 8048a32:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048a39:	e8 a2 fd ff ff       	call   80487e0 <exit@plt>
 8048a3e:	83 ec 04             	sub    $0x4,%esp
 8048a41:	ff 33                	pushl  (%ebx)
 8048a43:	68 e7 9e 04 08       	push   $0x8049ee7
 8048a48:	6a 01                	push   $0x1
 8048a4a:	e8 f1 fd ff ff       	call   8048840 <__printf_chk@plt>
 8048a4f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048a56:	e8 85 fd ff ff       	call   80487e0 <exit@plt>
 8048a5b:	e8 f1 05 00 00       	call   8049051 <initialize_bomb>
 8048a60:	83 ec 0c             	sub    $0xc,%esp
 8048a63:	68 4c 9f 04 08       	push   $0x8049f4c
 8048a68:	e8 53 fd ff ff       	call   80487c0 <puts@plt>
 8048a6d:	c7 04 24 88 9f 04 08 	movl   $0x8049f88,(%esp)
 8048a74:	e8 47 fd ff ff       	call   80487c0 <puts@plt>
 8048a79:	e8 c5 06 00 00       	call   8049143 <read_line>
 8048a7e:	89 04 24             	mov    %eax,(%esp)
 8048a81:	e8 ad 00 00 00       	call   8048b33 <phase_1>
 8048a86:	e8 b1 07 00 00       	call   804923c <phase_defused>
 8048a8b:	c7 04 24 b4 9f 04 08 	movl   $0x8049fb4,(%esp)
 8048a92:	e8 29 fd ff ff       	call   80487c0 <puts@plt>
 8048a97:	e8 a7 06 00 00       	call   8049143 <read_line>
 8048a9c:	89 04 24             	mov    %eax,(%esp)
 8048a9f:	e8 b0 00 00 00       	call   8048b54 <phase_2>
 8048aa4:	e8 93 07 00 00       	call   804923c <phase_defused>
 8048aa9:	c7 04 24 01 9f 04 08 	movl   $0x8049f01,(%esp)
 8048ab0:	e8 0b fd ff ff       	call   80487c0 <puts@plt>
 8048ab5:	e8 89 06 00 00       	call   8049143 <read_line>
 8048aba:	89 04 24             	mov    %eax,(%esp)
 8048abd:	e8 fd 00 00 00       	call   8048bbf <phase_3>
 8048ac2:	e8 75 07 00 00       	call   804923c <phase_defused>
 8048ac7:	c7 04 24 1f 9f 04 08 	movl   $0x8049f1f,(%esp)
 8048ace:	e8 ed fc ff ff       	call   80487c0 <puts@plt>
 8048ad3:	e8 6b 06 00 00       	call   8049143 <read_line>
 8048ad8:	89 04 24             	mov    %eax,(%esp)
 8048adb:	e8 df 01 00 00       	call   8048cbf <phase_4>
 8048ae0:	e8 57 07 00 00       	call   804923c <phase_defused>
 8048ae5:	c7 04 24 e0 9f 04 08 	movl   $0x8049fe0,(%esp)
 8048aec:	e8 cf fc ff ff       	call   80487c0 <puts@plt>
 8048af1:	e8 4d 06 00 00       	call   8049143 <read_line>
 8048af6:	89 04 24             	mov    %eax,(%esp)
 8048af9:	e8 36 02 00 00       	call   8048d34 <phase_5>
 8048afe:	e8 39 07 00 00       	call   804923c <phase_defused>
 8048b03:	c7 04 24 2e 9f 04 08 	movl   $0x8049f2e,(%esp)
 8048b0a:	e8 b1 fc ff ff       	call   80487c0 <puts@plt>
 8048b0f:	e8 2f 06 00 00       	call   8049143 <read_line>
 8048b14:	89 04 24             	mov    %eax,(%esp)
 8048b17:	e8 a5 02 00 00       	call   8048dc1 <phase_6>
 8048b1c:	e8 1b 07 00 00       	call   804923c <phase_defused>
 8048b21:	83 c4 10             	add    $0x10,%esp
 8048b24:	b8 00 00 00 00       	mov    $0x0,%eax
 8048b29:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048b2c:	59                   	pop    %ecx
 8048b2d:	5b                   	pop    %ebx
 8048b2e:	5d                   	pop    %ebp
 8048b2f:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048b32:	c3                   	ret    

08048b33 <phase_1>:
 8048b33:	83 ec 14             	sub    $0x14,%esp
 8048b36:	68 04 a0 04 08       	push   $0x804a004
 8048b3b:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048b3f:	e8 a8 04 00 00       	call   8048fec <strings_not_equal>
 8048b44:	83 c4 10             	add    $0x10,%esp
 8048b47:	85 c0                	test   %eax,%eax
 8048b49:	74 05                	je     8048b50 <phase_1+0x1d>
 8048b4b:	e8 93 05 00 00       	call   80490e3 <explode_bomb>
 8048b50:	83 c4 0c             	add    $0xc,%esp
 8048b53:	c3                   	ret    

08048b54 <phase_2>:
 8048b54:	56                   	push   %esi
 8048b55:	53                   	push   %ebx
 8048b56:	83 ec 2c             	sub    $0x2c,%esp
 8048b59:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048b5f:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048b63:	31 c0                	xor    %eax,%eax
 8048b65:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048b69:	50                   	push   %eax
 8048b6a:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048b6e:	e8 95 05 00 00       	call   8049108 <read_six_numbers> ;读6个数
 8048b73:	83 c4 10             	add    $0x10,%esp
 8048b76:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)             ;比较该位置的数和0的大小，不等于0就爆炸
 8048b7b:	75 07                	jne    8048b84 <phase_2+0x30>
 8048b7d:	83 7c 24 08 01       	cmpl   $0x1,0x8(%esp)              ;下一个位置不是1爆炸
 8048b82:	74 05                	je     8048b89 <phase_2+0x35>
 8048b84:	e8 5a 05 00 00       	call   80490e3 <explode_bomb>
 8048b89:	8d 5c 24 04          	lea    0x4(%esp),%ebx              ;第1个位置的数
 8048b8d:	8d 74 24 14          	lea    0x14(%esp),%esi             ;最后一个数的位置
 8048b91:	8b 43 04             	mov    0x4(%ebx),%eax              ;第2个数
 8048b94:	03 03                	add    (%ebx),%eax                 ;相加
 8048b96:	39 43 08             	cmp    %eax,0x8(%ebx)              ;和与下一个数比较，不想等爆炸
 8048b99:	74 05                	je     8048ba0 <phase_2+0x4c>
 8048b9b:	e8 43 05 00 00       	call   80490e3 <explode_bomb>
 8048ba0:	83 c3 04             	add    $0x4,%ebx                   ;下一轮比较
 8048ba3:	39 f3                	cmp    %esi,%ebx                   ;直到最后一个数比完
 8048ba5:	75 ea                	jne    8048b91 <phase_2+0x3d>
 8048ba7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048bab:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048bb2:	74 05                	je     8048bb9 <phase_2+0x65>
 8048bb4:	e8 d7 fb ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048bb9:	83 c4 24             	add    $0x24,%esp
 8048bbc:	5b                   	pop    %ebx
 8048bbd:	5e                   	pop    %esi
 8048bbe:	c3                   	ret    

08048bbf <phase_3>:
 8048bbf:	83 ec 1c             	sub    $0x1c,%esp
 8048bc2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048bc8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048bcc:	31 c0                	xor    %eax,%eax
 8048bce:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048bd2:	50                   	push   %eax
 8048bd3:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048bd7:	50                   	push   %eax
 8048bd8:	68 cf a1 04 08       	push   $0x804a1cf
 8048bdd:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048be1:	e8 2a fc ff ff       	call   8048810 <__isoc99_sscanf@plt> ;输入2个数
 8048be6:	83 c4 10             	add    $0x10,%esp
 8048be9:	83 f8 01             	cmp    $0x1,%eax             ;输入的值要超过1个
 8048bec:	7f 05                	jg     8048bf3 <phase_3+0x34>
 8048bee:	e8 f0 04 00 00       	call   80490e3 <explode_bomb>
 8048bf3:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)  ；比较输入第一个数和7
 8048bf8:	77 35                	ja     8048c2f <phase_3+0x70>;大于7bomb
 8048bfa:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048bfe:	ff 24 85 60 a0 04 08 	jmp    *0x804a060(,%eax,4);根据输入跳转
 8048c05:	b8 a5 01 00 00       	mov    $0x1a5,%eax
 8048c0a:	eb 34                	jmp    8048c40 <phase_3+0x81>
 8048c0c:	b8 32 03 00 00       	mov    $0x332,%eax
 8048c11:	eb 2d                	jmp    8048c40 <phase_3+0x81>
 8048c13:	b8 39 00 00 00       	mov    $0x39,%eax
 8048c18:	eb 26                	jmp    8048c40 <phase_3+0x81>
 8048c1a:	b8 ab 02 00 00       	mov    $0x2ab,%eax
 8048c1f:	eb 1f                	jmp    8048c40 <phase_3+0x81>
 8048c21:	b8 78 02 00 00       	mov    $0x278,%eax
 8048c26:	eb 18                	jmp    8048c40 <phase_3+0x81>
 8048c28:	b8 96 01 00 00       	mov    $0x196,%eax
 8048c2d:	eb 11                	jmp    8048c40 <phase_3+0x81>
 8048c2f:	e8 af 04 00 00       	call   80490e3 <explode_bomb>
 8048c34:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c39:	eb 05                	jmp    8048c40 <phase_3+0x81>
 8048c3b:	b8 99 03 00 00       	mov    $0x399,%eax
 8048c40:	3b 44 24 08          	cmp    0x8(%esp),%eax           ;在eax赋予相应值以后与输入的第二个数比较
 8048c44:	74 05                	je     8048c4b <phase_3+0x8c>
 8048c46:	e8 98 04 00 00       	call   80490e3 <explode_bomb>
 8048c4b:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c4f:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c56:	74 05                	je     8048c5d <phase_3+0x9e>
 8048c58:	e8 33 fb ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048c5d:	83 c4 1c             	add    $0x1c,%esp
 8048c60:	c3                   	ret    

08048c61 <func4>:
 8048c61:	56                   	push   %esi
 8048c62:	53                   	push   %ebx
 8048c63:	83 ec 04             	sub    $0x4,%esp
 8048c66:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 8048c6a:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8048c6e:	8b 74 24 18          	mov    0x18(%esp),%esi
 8048c72:	89 f0                	mov    %esi,%eax
 8048c74:	29 d8                	sub    %ebx,%eax
 8048c76:	89 c2                	mov    %eax,%edx
 8048c78:	c1 ea 1f             	shr    $0x1f,%edx
 8048c7b:	01 d0                	add    %edx,%eax
 8048c7d:	d1 f8                	sar    %eax
 8048c7f:	8d 14 18             	lea    (%eax,%ebx,1),%edx
 8048c82:	39 ca                	cmp    %ecx,%edx
 8048c84:	7e 15                	jle    8048c9b <func4+0x3a>
 8048c86:	83 ec 04             	sub    $0x4,%esp
 8048c89:	83 ea 01             	sub    $0x1,%edx
 8048c8c:	52                   	push   %edx
 8048c8d:	53                   	push   %ebx
 8048c8e:	51                   	push   %ecx
 8048c8f:	e8 cd ff ff ff       	call   8048c61 <func4>
 8048c94:	83 c4 10             	add    $0x10,%esp
 8048c97:	01 c0                	add    %eax,%eax
 8048c99:	eb 1e                	jmp    8048cb9 <func4+0x58>
 8048c9b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ca0:	39 ca                	cmp    %ecx,%edx
 8048ca2:	7d 15                	jge    8048cb9 <func4+0x58>
 8048ca4:	83 ec 04             	sub    $0x4,%esp
 8048ca7:	56                   	push   %esi
 8048ca8:	83 c2 01             	add    $0x1,%edx
 8048cab:	52                   	push   %edx
 8048cac:	51                   	push   %ecx
 8048cad:	e8 af ff ff ff       	call   8048c61 <func4>
 8048cb2:	83 c4 10             	add    $0x10,%esp
 8048cb5:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048cb9:	83 c4 04             	add    $0x4,%esp
 8048cbc:	5b                   	pop    %ebx
 8048cbd:	5e                   	pop    %esi
 8048cbe:	c3                   	ret    

08048cbf <phase_4>:
 8048cbf:	83 ec 1c             	sub    $0x1c,%esp
 8048cc2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048cc8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ccc:	31 c0                	xor    %eax,%eax
 8048cce:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cd2:	50                   	push   %eax
 8048cd3:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cd7:	50                   	push   %eax
 8048cd8:	68 cf a1 04 08       	push   $0x804a1cf
 8048cdd:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048ce1:	e8 2a fb ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048ce6:	83 c4 10             	add    $0x10,%esp
 8048ce9:	83 f8 02             	cmp    $0x2,%eax              ;读2个数
 8048cec:	75 07                	jne    8048cf5 <phase_4+0x36>
 8048cee:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)         ;输入的第一个数小雨等于14
 8048cf3:	76 05                	jbe    8048cfa <phase_4+0x3b>
 8048cf5:	e8 e9 03 00 00       	call   80490e3 <explode_bomb
 8048cfd:	6a 0e                	push   $0xe
 8048cff:	6a 00                	push   $0x0
 8048d01:	ff 74 24 10          	pushl  0x10(%esp)              ;各参数入栈
 8048d05:	e8 57 ff ff ff       	call   8048c61 <func4>         ;调用函数
 8048d0a:	83 c4 10             	add    $0x10,%esp               
 8048d0d:	83 f8 07             	cmp    $0x7,%eax               ;函数返回的参数，eax要等于7
 8048d10:	75 07                	jne    8048d19 <phase_4+0x5a>
 8048d12:	83 7c 24 08 07       	cmpl   $0x7,0x8(%esp)          ;返回的另一个参数，要等于7
 8048d17:	74 05                	je     8048d1e <phase_4+0x5f>
 8048d19:	e8 c5 03 00 00       	call   80490e3 <explode_bomb>
 8048d1e:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048d22:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d29:	74 05                	je     8048d30 <phase_4+0x71>
 8048d2b:	e8 60 fa ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048d30:	83 c4 1c             	add    $0x1c,%esp
 8048d33:	c3                   	ret    

08048d34 <phase_5>:
 8048d34:	83 ec 1c             	sub    $0x1c,%esp
 8048d37:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d3d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048d41:	31 c0                	xor    %eax,%eax
 8048d43:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048d47:	50                   	push   %eax
 8048d48:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048d4c:	50                   	push   %eax
 8048d4d:	68 cf a1 04 08       	push   $0x804a1cf
 8048d52:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048d56:	e8 b5 fa ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048d5b:	83 c4 10             	add    $0x10,%esp
 8048d5e:	83 f8 01             	cmp    $0x1,%eax
 8048d61:	7f 05                	jg     8048d68 <phase_5+0x34>
 8048d63:	e8 7b 03 00 00       	call   80490e3 <explode_bomb>
 8048d68:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048d6c:	83 e0 0f             	and    $0xf,%eax
 8048d6f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d73:	83 f8 0f             	cmp    $0xf,%eax
 8048d76:	74 2e                	je     8048da6 <phase_5+0x72>
 8048d78:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048d7d:	ba 00 00 00 00       	mov    $0x0,%edx
 8048d82:	83 c2 01             	add    $0x1,%edx
 8048d85:	8b 04 85 80 a0 04 08 	mov    0x804a080(,%eax,4),%eax
 8048d8c:	01 c1                	add    %eax,%ecx
 8048d8e:	83 f8 0f             	cmp    $0xf,%eax
 8048d91:	75 ef                	jne    8048d82 <phase_5+0x4e>
 8048d93:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)
 8048d9a:	00 
 8048d9b:	83 fa 0f             	cmp    $0xf,%edx
 8048d9e:	75 06                	jne    8048da6 <phase_5+0x72>
 8048da0:	3b 4c 24 08          	cmp    0x8(%esp),%ecx
 8048da4:	74 05                	je     8048dab <phase_5+0x77>
 8048da6:	e8 38 03 00 00       	call   80490e3 <explode_bomb>
 8048dab:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048daf:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048db6:	74 05                	je     8048dbd <phase_5+0x89>
 8048db8:	e8 d3 f9 ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048dbd:	83 c4 1c             	add    $0x1c,%esp
 8048dc0:	c3                   	ret    

08048dc1 <phase_6>:
 8048dc1:	56                   	push   %esi
 8048dc2:	53                   	push   %ebx
 8048dc3:	83 ec 4c             	sub    $0x4c,%esp
 8048dc6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048dcc:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048dd0:	31 c0                	xor    %eax,%eax
 8048dd2:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048dd6:	50                   	push   %eax
 8048dd7:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048ddb:	e8 28 03 00 00       	call   8049108 <read_six_numbers>
 8048de0:	83 c4 10             	add    $0x10,%esp
 8048de3:	be 00 00 00 00       	mov    $0x0,%esi
 8048de8:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8048dec:	83 e8 01             	sub    $0x1,%eax
 8048def:	83 f8 05             	cmp    $0x5,%eax
 8048df2:	76 05                	jbe    8048df9 <phase_6+0x38>
 8048df4:	e8 ea 02 00 00       	call   80490e3 <explode_bomb>
 8048df9:	83 c6 01             	add    $0x1,%esi
 8048dfc:	83 fe 06             	cmp    $0x6,%esi
 8048dff:	74 33                	je     8048e34 <phase_6+0x73>
 8048e01:	89 f3                	mov    %esi,%ebx
 8048e03:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048e07:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048e0b:	75 05                	jne    8048e12 <phase_6+0x51>
 8048e0d:	e8 d1 02 00 00       	call   80490e3 <explode_bomb>
 8048e12:	83 c3 01             	add    $0x1,%ebx
 8048e15:	83 fb 05             	cmp    $0x5,%ebx
 8048e18:	7e e9                	jle    8048e03 <phase_6+0x42>
 8048e1a:	eb cc                	jmp    8048de8 <phase_6+0x27>
 8048e1c:	8b 52 08             	mov    0x8(%edx),%edx
 8048e1f:	83 c0 01             	add    $0x1,%eax
 8048e22:	39 c8                	cmp    %ecx,%eax
 8048e24:	75 f6                	jne    8048e1c <phase_6+0x5b>
 8048e26:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8048e2a:	83 c3 01             	add    $0x1,%ebx
 8048e2d:	83 fb 06             	cmp    $0x6,%ebx
 8048e30:	75 07                	jne    8048e39 <phase_6+0x78>
 8048e32:	eb 1c                	jmp    8048e50 <phase_6+0x8f>
 8048e34:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048e39:	89 de                	mov    %ebx,%esi
 8048e3b:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8048e3f:	b8 01 00 00 00       	mov    $0x1,%eax
 8048e44:	ba 3c c1 04 08       	mov    $0x804c13c,%edx
 8048e49:	83 f9 01             	cmp    $0x1,%ecx
 8048e4c:	7f ce                	jg     8048e1c <phase_6+0x5b>
 8048e4e:	eb d6                	jmp    8048e26 <phase_6+0x65>
 8048e50:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 8048e54:	8d 44 24 24          	lea    0x24(%esp),%eax
 8048e58:	8d 74 24 38          	lea    0x38(%esp),%esi
 8048e5c:	89 d9                	mov    %ebx,%ecx
 8048e5e:	8b 50 04             	mov    0x4(%eax),%edx
 8048e61:	89 51 08             	mov    %edx,0x8(%ecx)
 8048e64:	83 c0 04             	add    $0x4,%eax
 8048e67:	89 d1                	mov    %edx,%ecx
 8048e69:	39 f0                	cmp    %esi,%eax
 8048e6b:	75 f1                	jne    8048e5e <phase_6+0x9d>
 8048e6d:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 8048e74:	be 05 00 00 00       	mov    $0x5,%esi
 8048e79:	8b 43 08             	mov    0x8(%ebx),%eax
 8048e7c:	8b 00                	mov    (%eax),%eax
 8048e7e:	39 03                	cmp    %eax,(%ebx)
 8048e80:	7d 05                	jge    8048e87 <phase_6+0xc6>
 8048e82:	e8 5c 02 00 00       	call   80490e3 <explode_bomb>
 8048e87:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048e8a:	83 ee 01             	sub    $0x1,%esi
 8048e8d:	75 ea                	jne    8048e79 <phase_6+0xb8>
 8048e8f:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8048e93:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e9a:	74 05                	je     8048ea1 <phase_6+0xe0>
 8048e9c:	e8 ef f8 ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048ea1:	83 c4 44             	add    $0x44,%esp
 8048ea4:	5b                   	pop    %ebx
 8048ea5:	5e                   	pop    %esi
 8048ea6:	c3                   	ret    

08048ea7 <fun7>:
 8048ea7:	53                   	push   %ebx
 8048ea8:	83 ec 08             	sub    $0x8,%esp
 8048eab:	8b 54 24 10          	mov    0x10(%esp),%edx
 8048eaf:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 8048eb3:	85 d2                	test   %edx,%edx
 8048eb5:	74 37                	je     8048eee <fun7+0x47>
 8048eb7:	8b 1a                	mov    (%edx),%ebx
 8048eb9:	39 cb                	cmp    %ecx,%ebx
 8048ebb:	7e 13                	jle    8048ed0 <fun7+0x29>
 8048ebd:	83 ec 08             	sub    $0x8,%esp
 8048ec0:	51                   	push   %ecx
 8048ec1:	ff 72 04             	pushl  0x4(%edx)
 8048ec4:	e8 de ff ff ff       	call   8048ea7 <fun7>
 8048ec9:	83 c4 10             	add    $0x10,%esp
 8048ecc:	01 c0                	add    %eax,%eax
 8048ece:	eb 23                	jmp    8048ef3 <fun7+0x4c>
 8048ed0:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ed5:	39 cb                	cmp    %ecx,%ebx
 8048ed7:	74 1a                	je     8048ef3 <fun7+0x4c>
 8048ed9:	83 ec 08             	sub    $0x8,%esp
 8048edc:	51                   	push   %ecx
 8048edd:	ff 72 08             	pushl  0x8(%edx)
 8048ee0:	e8 c2 ff ff ff       	call   8048ea7 <fun7>
 8048ee5:	83 c4 10             	add    $0x10,%esp
 8048ee8:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048eec:	eb 05                	jmp    8048ef3 <fun7+0x4c>
 8048eee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8048ef3:	83 c4 08             	add    $0x8,%esp
 8048ef6:	5b                   	pop    %ebx
 8048ef7:	c3                   	ret    

08048ef8 <secret_phase>:
 8048ef8:	53                   	push   %ebx
 8048ef9:	83 ec 08             	sub    $0x8,%esp
 8048efc:	e8 42 02 00 00       	call   8049143 <read_line>
 8048f01:	83 ec 04             	sub    $0x4,%esp
 8048f04:	6a 0a                	push   $0xa
 8048f06:	6a 00                	push   $0x0
 8048f08:	50                   	push   %eax
 8048f09:	e8 72 f9 ff ff       	call   8048880 <strtol@plt>
 8048f0e:	89 c3                	mov    %eax,%ebx
 8048f10:	8d 40 ff             	lea    -0x1(%eax),%eax
 8048f13:	83 c4 10             	add    $0x10,%esp
 8048f16:	3d e8 03 00 00       	cmp    $0x3e8,%eax
 8048f1b:	76 05                	jbe    8048f22 <secret_phase+0x2a>
 8048f1d:	e8 c1 01 00 00       	call   80490e3 <explode_bomb>
 8048f22:	83 ec 08             	sub    $0x8,%esp
 8048f25:	53                   	push   %ebx
 8048f26:	68 88 c0 04 08       	push   $0x804c088
 8048f2b:	e8 77 ff ff ff       	call   8048ea7 <fun7>
 8048f30:	83 c4 10             	add    $0x10,%esp
 8048f33:	83 f8 04             	cmp    $0x4,%eax
 8048f36:	74 05                	je     8048f3d <secret_phase+0x45>
 8048f38:	e8 a6 01 00 00       	call   80490e3 <explode_bomb>
 8048f3d:	83 ec 0c             	sub    $0xc,%esp
 8048f40:	68 24 a0 04 08       	push   $0x804a024
 8048f45:	e8 76 f8 ff ff       	call   80487c0 <puts@plt>
 8048f4a:	e8 ed 02 00 00       	call   804923c <phase_defused>
 8048f4f:	83 c4 18             	add    $0x18,%esp
 8048f52:	5b                   	pop    %ebx
 8048f53:	c3                   	ret    

08048f54 <sig_handler>:
 8048f54:	83 ec 18             	sub    $0x18,%esp
 8048f57:	68 c0 a0 04 08       	push   $0x804a0c0
 8048f5c:	e8 5f f8 ff ff       	call   80487c0 <puts@plt>
 8048f61:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048f68:	e8 03 f8 ff ff       	call   8048770 <sleep@plt>
 8048f6d:	83 c4 08             	add    $0x8,%esp
 8048f70:	68 82 a1 04 08       	push   $0x804a182
 8048f75:	6a 01                	push   $0x1
 8048f77:	e8 c4 f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048f7c:	83 c4 04             	add    $0x4,%esp
 8048f7f:	ff 35 c4 c3 04 08    	pushl  0x804c3c4
 8048f85:	e8 b6 f7 ff ff       	call   8048740 <fflush@plt>
 8048f8a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048f91:	e8 da f7 ff ff       	call   8048770 <sleep@plt>
 8048f96:	c7 04 24 8a a1 04 08 	movl   $0x804a18a,(%esp)
 8048f9d:	e8 1e f8 ff ff       	call   80487c0 <puts@plt>
 8048fa2:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8048fa9:	e8 32 f8 ff ff       	call   80487e0 <exit@plt>

08048fae <invalid_phase>:
 8048fae:	83 ec 10             	sub    $0x10,%esp
 8048fb1:	ff 74 24 14          	pushl  0x14(%esp)
 8048fb5:	68 92 a1 04 08       	push   $0x804a192
 8048fba:	6a 01                	push   $0x1
 8048fbc:	e8 7f f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048fc1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048fc8:	e8 13 f8 ff ff       	call   80487e0 <exit@plt>

08048fcd <string_length>:
 8048fcd:	8b 54 24 04          	mov    0x4(%esp),%edx
 8048fd1:	80 3a 00             	cmpb   $0x0,(%edx)
 8048fd4:	74 10                	je     8048fe6 <string_length+0x19>
 8048fd6:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fdb:	83 c0 01             	add    $0x1,%eax
 8048fde:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8048fe2:	75 f7                	jne    8048fdb <string_length+0xe>
 8048fe4:	f3 c3                	repz ret 
 8048fe6:	b8 00 00 00 00       	mov    $0x0,%eax
 8048feb:	c3                   	ret    

08048fec <strings_not_equal>:
 8048fec:	57                   	push   %edi
 8048fed:	56                   	push   %esi
 8048fee:	53                   	push   %ebx
 8048fef:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048ff3:	8b 74 24 14          	mov    0x14(%esp),%esi
 8048ff7:	53                   	push   %ebx
 8048ff8:	e8 d0 ff ff ff       	call   8048fcd <string_length>
 8048ffd:	89 c7                	mov    %eax,%edi
 8048fff:	89 34 24             	mov    %esi,(%esp)
 8049002:	e8 c6 ff ff ff       	call   8048fcd <string_length>
 8049007:	83 c4 04             	add    $0x4,%esp
 804900a:	ba 01 00 00 00       	mov    $0x1,%edx
 804900f:	39 c7                	cmp    %eax,%edi
 8049011:	75 38                	jne    804904b <strings_not_equal+0x5f>
 8049013:	0f b6 03             	movzbl (%ebx),%eax
 8049016:	84 c0                	test   %al,%al
 8049018:	74 1e                	je     8049038 <strings_not_equal+0x4c>
 804901a:	3a 06                	cmp    (%esi),%al
 804901c:	74 06                	je     8049024 <strings_not_equal+0x38>
 804901e:	eb 1f                	jmp    804903f <strings_not_equal+0x53>
 8049020:	3a 06                	cmp    (%esi),%al
 8049022:	75 22                	jne    8049046 <strings_not_equal+0x5a>
 8049024:	83 c3 01             	add    $0x1,%ebx
 8049027:	83 c6 01             	add    $0x1,%esi
 804902a:	0f b6 03             	movzbl (%ebx),%eax
 804902d:	84 c0                	test   %al,%al
 804902f:	75 ef                	jne    8049020 <strings_not_equal+0x34>
 8049031:	ba 00 00 00 00       	mov    $0x0,%edx
 8049036:	eb 13                	jmp    804904b <strings_not_equal+0x5f>
 8049038:	ba 00 00 00 00       	mov    $0x0,%edx
 804903d:	eb 0c                	jmp    804904b <strings_not_equal+0x5f>
 804903f:	ba 01 00 00 00       	mov    $0x1,%edx
 8049044:	eb 05                	jmp    804904b <strings_not_equal+0x5f>
 8049046:	ba 01 00 00 00       	mov    $0x1,%edx
 804904b:	89 d0                	mov    %edx,%eax
 804904d:	5b                   	pop    %ebx
 804904e:	5e                   	pop    %esi
 804904f:	5f                   	pop    %edi
 8049050:	c3                   	ret    

08049051 <initialize_bomb>:
 8049051:	83 ec 14             	sub    $0x14,%esp
 8049054:	68 54 8f 04 08       	push   $0x8048f54
 8049059:	6a 02                	push   $0x2
 804905b:	e8 00 f7 ff ff       	call   8048760 <signal@plt>
 8049060:	83 c4 1c             	add    $0x1c,%esp
 8049063:	c3                   	ret    

08049064 <initialize_bomb_solve>:
 8049064:	f3 c3                	repz ret 

08049066 <blank_line>:
 8049066:	56                   	push   %esi
 8049067:	53                   	push   %ebx
 8049068:	83 ec 04             	sub    $0x4,%esp
 804906b:	8b 74 24 10          	mov    0x10(%esp),%esi
 804906f:	eb 14                	jmp    8049085 <blank_line+0x1f>
 8049071:	e8 3a f8 ff ff       	call   80488b0 <__ctype_b_loc@plt>
 8049076:	83 c6 01             	add    $0x1,%esi
 8049079:	0f be db             	movsbl %bl,%ebx
 804907c:	8b 00                	mov    (%eax),%eax
 804907e:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049083:	74 0e                	je     8049093 <blank_line+0x2d>
 8049085:	0f b6 1e             	movzbl (%esi),%ebx
 8049088:	84 db                	test   %bl,%bl
 804908a:	75 e5                	jne    8049071 <blank_line+0xb>
 804908c:	b8 01 00 00 00       	mov    $0x1,%eax
 8049091:	eb 05                	jmp    8049098 <blank_line+0x32>
 8049093:	b8 00 00 00 00       	mov    $0x0,%eax
 8049098:	83 c4 04             	add    $0x4,%esp
 804909b:	5b                   	pop    %ebx
 804909c:	5e                   	pop    %esi
 804909d:	c3                   	ret    

0804909e <skip>:
 804909e:	53                   	push   %ebx
 804909f:	83 ec 08             	sub    $0x8,%esp
 80490a2:	83 ec 04             	sub    $0x4,%esp
 80490a5:	ff 35 d0 c3 04 08    	pushl  0x804c3d0
 80490ab:	6a 50                	push   $0x50
 80490ad:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80490b2:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80490b5:	c1 e0 04             	shl    $0x4,%eax
 80490b8:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 80490bd:	50                   	push   %eax
 80490be:	e8 8d f6 ff ff       	call   8048750 <fgets@plt>
 80490c3:	89 c3                	mov    %eax,%ebx
 80490c5:	83 c4 10             	add    $0x10,%esp
 80490c8:	85 c0                	test   %eax,%eax
 80490ca:	74 10                	je     80490dc <skip+0x3e>
 80490cc:	83 ec 0c             	sub    $0xc,%esp
 80490cf:	50                   	push   %eax
 80490d0:	e8 91 ff ff ff       	call   8049066 <blank_line>
 80490d5:	83 c4 10             	add    $0x10,%esp
 80490d8:	85 c0                	test   %eax,%eax
 80490da:	75 c6                	jne    80490a2 <skip+0x4>
 80490dc:	89 d8                	mov    %ebx,%eax
 80490de:	83 c4 08             	add    $0x8,%esp
 80490e1:	5b                   	pop    %ebx
 80490e2:	c3                   	ret    

080490e3 <explode_bomb>:
 80490e3:	83 ec 18             	sub    $0x18,%esp
 80490e6:	68 a3 a1 04 08       	push   $0x804a1a3
 80490eb:	e8 d0 f6 ff ff       	call   80487c0 <puts@plt>
 80490f0:	c7 04 24 ac a1 04 08 	movl   $0x804a1ac,(%esp)
 80490f7:	e8 c4 f6 ff ff       	call   80487c0 <puts@plt>
 80490fc:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049103:	e8 d8 f6 ff ff       	call   80487e0 <exit@plt>

08049108 <read_six_numbers>:
 8049108:	83 ec 0c             	sub    $0xc,%esp
 804910b:	8b 44 24 14          	mov    0x14(%esp),%eax
 804910f:	8d 50 14             	lea    0x14(%eax),%edx
 8049112:	52                   	push   %edx
 8049113:	8d 50 10             	lea    0x10(%eax),%edx
 8049116:	52                   	push   %edx
 8049117:	8d 50 0c             	lea    0xc(%eax),%edx
 804911a:	52                   	push   %edx
 804911b:	8d 50 08             	lea    0x8(%eax),%edx
 804911e:	52                   	push   %edx
 804911f:	8d 50 04             	lea    0x4(%eax),%edx
 8049122:	52                   	push   %edx
 8049123:	50                   	push   %eax
 8049124:	68 c3 a1 04 08       	push   $0x804a1c3
 8049129:	ff 74 24 2c          	pushl  0x2c(%esp)
 804912d:	e8 de f6 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049132:	83 c4 20             	add    $0x20,%esp
 8049135:	83 f8 05             	cmp    $0x5,%eax
 8049138:	7f 05                	jg     804913f <read_six_numbers+0x37>
 804913a:	e8 a4 ff ff ff       	call   80490e3 <explode_bomb>
 804913f:	83 c4 0c             	add    $0xc,%esp
 8049142:	c3                   	ret    

08049143 <read_line>:
 8049143:	57                   	push   %edi
 8049144:	56                   	push   %esi
 8049145:	53                   	push   %ebx
 8049146:	e8 53 ff ff ff       	call   804909e <skip>
 804914b:	85 c0                	test   %eax,%eax
 804914d:	75 70                	jne    80491bf <read_line+0x7c>
 804914f:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049154:	39 05 d0 c3 04 08    	cmp    %eax,0x804c3d0
 804915a:	75 19                	jne    8049175 <read_line+0x32>
 804915c:	83 ec 0c             	sub    $0xc,%esp
 804915f:	68 d5 a1 04 08       	push   $0x804a1d5
 8049164:	e8 57 f6 ff ff       	call   80487c0 <puts@plt>
 8049169:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049170:	e8 6b f6 ff ff       	call   80487e0 <exit@plt>
 8049175:	83 ec 0c             	sub    $0xc,%esp
 8049178:	68 f3 a1 04 08       	push   $0x804a1f3
 804917d:	e8 2e f6 ff ff       	call   80487b0 <getenv@plt>
 8049182:	83 c4 10             	add    $0x10,%esp
 8049185:	85 c0                	test   %eax,%eax
 8049187:	74 0a                	je     8049193 <read_line+0x50>
 8049189:	83 ec 0c             	sub    $0xc,%esp
 804918c:	6a 00                	push   $0x0
 804918e:	e8 4d f6 ff ff       	call   80487e0 <exit@plt>
 8049193:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049198:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 804919d:	e8 fc fe ff ff       	call   804909e <skip>
 80491a2:	85 c0                	test   %eax,%eax
 80491a4:	75 19                	jne    80491bf <read_line+0x7c>
 80491a6:	83 ec 0c             	sub    $0xc,%esp
 80491a9:	68 d5 a1 04 08       	push   $0x804a1d5
 80491ae:	e8 0d f6 ff ff       	call   80487c0 <puts@plt>
 80491b3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80491ba:	e8 21 f6 ff ff       	call   80487e0 <exit@plt>
 80491bf:	8b 15 cc c3 04 08    	mov    0x804c3cc,%edx
 80491c5:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80491c8:	c1 e3 04             	shl    $0x4,%ebx
 80491cb:	81 c3 e0 c3 04 08    	add    $0x804c3e0,%ebx
 80491d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80491d6:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80491db:	89 df                	mov    %ebx,%edi
 80491dd:	f2 ae                	repnz scas %es:(%edi),%al
 80491df:	f7 d1                	not    %ecx
 80491e1:	83 e9 01             	sub    $0x1,%ecx
 80491e4:	83 f9 4e             	cmp    $0x4e,%ecx
 80491e7:	7e 36                	jle    804921f <read_line+0xdc>
 80491e9:	83 ec 0c             	sub    $0xc,%esp
 80491ec:	68 fe a1 04 08       	push   $0x804a1fe
 80491f1:	e8 ca f5 ff ff       	call   80487c0 <puts@plt>
 80491f6:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80491fb:	8d 50 01             	lea    0x1(%eax),%edx
 80491fe:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 8049204:	6b c0 50             	imul   $0x50,%eax,%eax
 8049207:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 804920c:	be 19 a2 04 08       	mov    $0x804a219,%esi
 8049211:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049216:	89 c7                	mov    %eax,%edi
 8049218:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804921a:	e8 c4 fe ff ff       	call   80490e3 <explode_bomb>
 804921f:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049222:	c1 e0 04             	shl    $0x4,%eax
 8049225:	c6 84 01 df c3 04 08 	movb   $0x0,0x804c3df(%ecx,%eax,1)
 804922c:	00 
 804922d:	83 c2 01             	add    $0x1,%edx
 8049230:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 8049236:	89 d8                	mov    %ebx,%eax
 8049238:	5b                   	pop    %ebx
 8049239:	5e                   	pop    %esi
 804923a:	5f                   	pop    %edi
 804923b:	c3                   	ret    

0804923c <phase_defused>:
 804923c:	83 ec 6c             	sub    $0x6c,%esp
 804923f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049245:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 8049249:	31 c0                	xor    %eax,%eax
 804924b:	83 3d cc c3 04 08 06 	cmpl   $0x6,0x804c3cc
 8049252:	75 73                	jne    80492c7 <phase_defused+0x8b>
 8049254:	83 ec 0c             	sub    $0xc,%esp
 8049257:	8d 44 24 18          	lea    0x18(%esp),%eax
 804925b:	50                   	push   %eax
 804925c:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049260:	50                   	push   %eax
 8049261:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049265:	50                   	push   %eax
 8049266:	68 29 a2 04 08       	push   $0x804a229
 804926b:	68 d0 c4 04 08       	push   $0x804c4d0
 8049270:	e8 9b f5 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049275:	83 c4 20             	add    $0x20,%esp
 8049278:	83 f8 03             	cmp    $0x3,%eax
 804927b:	75 3a                	jne    80492b7 <phase_defused+0x7b>
 804927d:	83 ec 08             	sub    $0x8,%esp
 8049280:	68 32 a2 04 08       	push   $0x804a232
 8049285:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049289:	50                   	push   %eax
 804928a:	e8 5d fd ff ff       	call   8048fec <strings_not_equal>
 804928f:	83 c4 10             	add    $0x10,%esp
 8049292:	85 c0                	test   %eax,%eax
 8049294:	75 21                	jne    80492b7 <phase_defused+0x7b>
 8049296:	83 ec 0c             	sub    $0xc,%esp
 8049299:	68 f8 a0 04 08       	push   $0x804a0f8
 804929e:	e8 1d f5 ff ff       	call   80487c0 <puts@plt>
 80492a3:	c7 04 24 20 a1 04 08 	movl   $0x804a120,(%esp)
 80492aa:	e8 11 f5 ff ff       	call   80487c0 <puts@plt>
 80492af:	e8 44 fc ff ff       	call   8048ef8 <secret_phase>
 80492b4:	83 c4 10             	add    $0x10,%esp
 80492b7:	83 ec 0c             	sub    $0xc,%esp
 80492ba:	68 58 a1 04 08       	push   $0x804a158
 80492bf:	e8 fc f4 ff ff       	call   80487c0 <puts@plt>
 80492c4:	83 c4 10             	add    $0x10,%esp
 80492c7:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 80492cb:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80492d2:	74 05                	je     80492d9 <phase_defused+0x9d>
 80492d4:	e8 b7 f4 ff ff       	call   8048790 <__stack_chk_fail@plt>
 80492d9:	83 c4 6c             	add    $0x6c,%esp
 80492dc:	c3                   	ret    

080492dd <sigalrm_handler>:
 80492dd:	83 ec 0c             	sub    $0xc,%esp
 80492e0:	6a 00                	push   $0x0
 80492e2:	68 88 a2 04 08       	push   $0x804a288
 80492e7:	6a 01                	push   $0x1
 80492e9:	ff 35 a0 c3 04 08    	pushl  0x804c3a0
 80492ef:	e8 6c f5 ff ff       	call   8048860 <__fprintf_chk@plt>
 80492f4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492fb:	e8 e0 f4 ff ff       	call   80487e0 <exit@plt>

08049300 <rio_readlineb>:
 8049300:	55                   	push   %ebp
 8049301:	57                   	push   %edi
 8049302:	56                   	push   %esi
 8049303:	53                   	push   %ebx
 8049304:	83 ec 2c             	sub    $0x2c,%esp
 8049307:	89 d7                	mov    %edx,%edi
 8049309:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804930d:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 8049314:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 8049318:	31 d2                	xor    %edx,%edx
 804931a:	83 f9 01             	cmp    $0x1,%ecx
 804931d:	76 79                	jbe    8049398 <rio_readlineb+0x98>
 804931f:	89 c3                	mov    %eax,%ebx
 8049321:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8049325:	bd 01 00 00 00       	mov    $0x1,%ebp
 804932a:	8d 73 0c             	lea    0xc(%ebx),%esi
 804932d:	eb 2d                	jmp    804935c <rio_readlineb+0x5c>
 804932f:	83 ec 04             	sub    $0x4,%esp
 8049332:	68 00 20 00 00       	push   $0x2000
 8049337:	56                   	push   %esi
 8049338:	ff 33                	pushl  (%ebx)
 804933a:	e8 f1 f3 ff ff       	call   8048730 <read@plt>
 804933f:	89 43 04             	mov    %eax,0x4(%ebx)
 8049342:	83 c4 10             	add    $0x10,%esp
 8049345:	85 c0                	test   %eax,%eax
 8049347:	79 0c                	jns    8049355 <rio_readlineb+0x55>
 8049349:	e8 e2 f4 ff ff       	call   8048830 <__errno_location@plt>
 804934e:	83 38 04             	cmpl   $0x4,(%eax)
 8049351:	74 09                	je     804935c <rio_readlineb+0x5c>
 8049353:	eb 62                	jmp    80493b7 <rio_readlineb+0xb7>
 8049355:	85 c0                	test   %eax,%eax
 8049357:	74 63                	je     80493bc <rio_readlineb+0xbc>
 8049359:	89 73 08             	mov    %esi,0x8(%ebx)
 804935c:	8b 43 04             	mov    0x4(%ebx),%eax
 804935f:	85 c0                	test   %eax,%eax
 8049361:	7e cc                	jle    804932f <rio_readlineb+0x2f>
 8049363:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049366:	0f b6 11             	movzbl (%ecx),%edx
 8049369:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 804936d:	83 c1 01             	add    $0x1,%ecx
 8049370:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049373:	83 e8 01             	sub    $0x1,%eax
 8049376:	89 43 04             	mov    %eax,0x4(%ebx)
 8049379:	83 c7 01             	add    $0x1,%edi
 804937c:	88 57 ff             	mov    %dl,-0x1(%edi)
 804937f:	80 fa 0a             	cmp    $0xa,%dl
 8049382:	75 09                	jne    804938d <rio_readlineb+0x8d>
 8049384:	eb 1d                	jmp    80493a3 <rio_readlineb+0xa3>
 8049386:	83 fd 01             	cmp    $0x1,%ebp
 8049389:	75 18                	jne    80493a3 <rio_readlineb+0xa3>
 804938b:	eb 1b                	jmp    80493a8 <rio_readlineb+0xa8>
 804938d:	83 c5 01             	add    $0x1,%ebp
 8049390:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049394:	74 09                	je     804939f <rio_readlineb+0x9f>
 8049396:	eb c4                	jmp    804935c <rio_readlineb+0x5c>
 8049398:	bd 01 00 00 00       	mov    $0x1,%ebp
 804939d:	eb 04                	jmp    80493a3 <rio_readlineb+0xa3>
 804939f:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 80493a3:	c6 07 00             	movb   $0x0,(%edi)
 80493a6:	89 e8                	mov    %ebp,%eax
 80493a8:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80493ac:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80493b3:	74 17                	je     80493cc <rio_readlineb+0xcc>
 80493b5:	eb 10                	jmp    80493c7 <rio_readlineb+0xc7>
 80493b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80493bc:	85 c0                	test   %eax,%eax
 80493be:	74 c6                	je     8049386 <rio_readlineb+0x86>
 80493c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80493c5:	eb e1                	jmp    80493a8 <rio_readlineb+0xa8>
 80493c7:	e8 c4 f3 ff ff       	call   8048790 <__stack_chk_fail@plt>
 80493cc:	83 c4 2c             	add    $0x2c,%esp
 80493cf:	5b                   	pop    %ebx
 80493d0:	5e                   	pop    %esi
 80493d1:	5f                   	pop    %edi
 80493d2:	5d                   	pop    %ebp
 80493d3:	c3                   	ret    

080493d4 <submitr>:
 80493d4:	55                   	push   %ebp
 80493d5:	57                   	push   %edi
 80493d6:	56                   	push   %esi
 80493d7:	53                   	push   %ebx
 80493d8:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 80493de:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 80493e5:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80493ec:	89 44 24 10          	mov    %eax,0x10(%esp)
 80493f0:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80493f7:	89 44 24 14          	mov    %eax,0x14(%esp)
 80493fb:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 8049402:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049406:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 804940d:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 8049414:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8049418:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804941e:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 8049425:	31 c0                	xor    %eax,%eax
 8049427:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 804942e:	00 
 804942f:	6a 00                	push   $0x0
 8049431:	6a 01                	push   $0x1
 8049433:	6a 02                	push   $0x2
 8049435:	e8 16 f4 ff ff       	call   8048850 <socket@plt>
 804943a:	89 44 24 18          	mov    %eax,0x18(%esp)
 804943e:	83 c4 10             	add    $0x10,%esp
 8049441:	85 c0                	test   %eax,%eax
 8049443:	79 52                	jns    8049497 <submitr+0xc3>
 8049445:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049449:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804944f:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049456:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 804945d:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049464:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804946b:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049472:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 8049479:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049480:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049487:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 804948d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049492:	e9 3f 06 00 00       	jmp    8049ad6 <submitr+0x702>
 8049497:	83 ec 0c             	sub    $0xc,%esp
 804949a:	56                   	push   %esi
 804949b:	e8 d0 f3 ff ff       	call   8048870 <gethostbyname@plt>
 80494a0:	83 c4 10             	add    $0x10,%esp
 80494a3:	85 c0                	test   %eax,%eax
 80494a5:	75 73                	jne    804951a <submitr+0x146>
 80494a7:	8b 44 24 18          	mov    0x18(%esp),%eax
 80494ab:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80494b1:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 80494b8:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 80494bf:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 80494c6:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80494cd:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80494d4:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 80494db:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 80494e2:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80494e9:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80494f0:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80494f7:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80494fd:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 8049501:	83 ec 0c             	sub    $0xc,%esp
 8049504:	ff 74 24 14          	pushl  0x14(%esp)
 8049508:	e8 93 f3 ff ff       	call   80488a0 <close@plt>
 804950d:	83 c4 10             	add    $0x10,%esp
 8049510:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049515:	e9 bc 05 00 00       	jmp    8049ad6 <submitr+0x702>
 804951a:	8d 74 24 30          	lea    0x30(%esp),%esi
 804951e:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049525:	00 
 8049526:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804952d:	00 
 804952e:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049535:	00 
 8049536:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804953d:	00 
 804953e:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049545:	6a 0c                	push   $0xc
 8049547:	ff 70 0c             	pushl  0xc(%eax)
 804954a:	8b 40 10             	mov    0x10(%eax),%eax
 804954d:	ff 30                	pushl  (%eax)
 804954f:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049553:	50                   	push   %eax
 8049554:	e8 77 f2 ff ff       	call   80487d0 <__memmove_chk@plt>
 8049559:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049560:	00 
 8049561:	66 c1 c8 08          	ror    $0x8,%ax
 8049565:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804956a:	83 c4 0c             	add    $0xc,%esp
 804956d:	6a 10                	push   $0x10
 804956f:	56                   	push   %esi
 8049570:	ff 74 24 14          	pushl  0x14(%esp)
 8049574:	e8 17 f3 ff ff       	call   8048890 <connect@plt>
 8049579:	83 c4 10             	add    $0x10,%esp
 804957c:	85 c0                	test   %eax,%eax
 804957e:	79 65                	jns    80495e5 <submitr+0x211>
 8049580:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049584:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804958a:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049591:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049598:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 804959f:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 80495a6:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 80495ad:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 80495b4:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 80495bb:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80495c2:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 80495c8:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 80495cc:	83 ec 0c             	sub    $0xc,%esp
 80495cf:	ff 74 24 14          	pushl  0x14(%esp)
 80495d3:	e8 c8 f2 ff ff       	call   80488a0 <close@plt>
 80495d8:	83 c4 10             	add    $0x10,%esp
 80495db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80495e0:	e9 f1 04 00 00       	jmp    8049ad6 <submitr+0x702>
 80495e5:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80495ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80495ef:	89 f1                	mov    %esi,%ecx
 80495f1:	89 df                	mov    %ebx,%edi
 80495f3:	f2 ae                	repnz scas %es:(%edi),%al
 80495f5:	f7 d1                	not    %ecx
 80495f7:	89 cd                	mov    %ecx,%ebp
 80495f9:	89 f1                	mov    %esi,%ecx
 80495fb:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80495ff:	f2 ae                	repnz scas %es:(%edi),%al
 8049601:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8049605:	89 f1                	mov    %esi,%ecx
 8049607:	8b 7c 24 10          	mov    0x10(%esp),%edi
 804960b:	f2 ae                	repnz scas %es:(%edi),%al
 804960d:	89 ca                	mov    %ecx,%edx
 804960f:	f7 d2                	not    %edx
 8049611:	89 f1                	mov    %esi,%ecx
 8049613:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8049617:	f2 ae                	repnz scas %es:(%edi),%al
 8049619:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 804961d:	29 ca                	sub    %ecx,%edx
 804961f:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 8049623:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 8049627:	3d 00 20 00 00       	cmp    $0x2000,%eax
 804962c:	76 7e                	jbe    80496ac <submitr+0x2d8>
 804962e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049632:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049638:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 804963f:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049646:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 804964d:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049654:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 804965b:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049662:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049669:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049670:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049677:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 804967e:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049685:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 804968c:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049693:	83 ec 0c             	sub    $0xc,%esp
 8049696:	ff 74 24 14          	pushl  0x14(%esp)
 804969a:	e8 01 f2 ff ff       	call   80488a0 <close@plt>
 804969f:	83 c4 10             	add    $0x10,%esp
 80496a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496a7:	e9 2a 04 00 00       	jmp    8049ad6 <submitr+0x702>
 80496ac:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80496b3:	b9 00 08 00 00       	mov    $0x800,%ecx
 80496b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80496bd:	89 d7                	mov    %edx,%edi
 80496bf:	f3 ab                	rep stos %eax,%es:(%edi)
 80496c1:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80496c6:	89 df                	mov    %ebx,%edi
 80496c8:	f2 ae                	repnz scas %es:(%edi),%al
 80496ca:	f7 d1                	not    %ecx
 80496cc:	89 ce                	mov    %ecx,%esi
 80496ce:	83 ee 01             	sub    $0x1,%esi
 80496d1:	0f 84 5c 04 00 00    	je     8049b33 <submitr+0x75f>
 80496d7:	89 d5                	mov    %edx,%ebp
 80496d9:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 80496de:	0f b6 13             	movzbl (%ebx),%edx
 80496e1:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 80496e4:	b8 01 00 00 00       	mov    $0x1,%eax
 80496e9:	80 f9 0f             	cmp    $0xf,%cl
 80496ec:	77 0a                	ja     80496f8 <submitr+0x324>
 80496ee:	89 f8                	mov    %edi,%eax
 80496f0:	d3 e8                	shr    %cl,%eax
 80496f2:	83 f0 01             	xor    $0x1,%eax
 80496f5:	83 e0 01             	and    $0x1,%eax
 80496f8:	80 fa 5f             	cmp    $0x5f,%dl
 80496fb:	0f 94 c1             	sete   %cl
 80496fe:	38 c1                	cmp    %al,%cl
 8049700:	73 0c                	jae    804970e <submitr+0x33a>
 8049702:	89 d0                	mov    %edx,%eax
 8049704:	83 e0 df             	and    $0xffffffdf,%eax
 8049707:	83 e8 41             	sub    $0x41,%eax
 804970a:	3c 19                	cmp    $0x19,%al
 804970c:	77 08                	ja     8049716 <submitr+0x342>
 804970e:	88 55 00             	mov    %dl,0x0(%ebp)
 8049711:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049714:	eb 62                	jmp    8049778 <submitr+0x3a4>
 8049716:	80 fa 20             	cmp    $0x20,%dl
 8049719:	75 09                	jne    8049724 <submitr+0x350>
 804971b:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 804971f:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049722:	eb 54                	jmp    8049778 <submitr+0x3a4>
 8049724:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049727:	3c 5f                	cmp    $0x5f,%al
 8049729:	76 09                	jbe    8049734 <submitr+0x360>
 804972b:	80 fa 09             	cmp    $0x9,%dl
 804972e:	0f 85 bb 03 00 00    	jne    8049aef <submitr+0x71b>
 8049734:	83 ec 0c             	sub    $0xc,%esp
 8049737:	0f b6 d2             	movzbl %dl,%edx
 804973a:	52                   	push   %edx
 804973b:	68 94 a3 04 08       	push   $0x804a394
 8049740:	6a 08                	push   $0x8
 8049742:	6a 01                	push   $0x1
 8049744:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 804974b:	50                   	push   %eax
 804974c:	e8 6f f1 ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049751:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049758:	00 
 8049759:	88 45 00             	mov    %al,0x0(%ebp)
 804975c:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049763:	00 
 8049764:	88 45 01             	mov    %al,0x1(%ebp)
 8049767:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 804976e:	00 
 804976f:	88 45 02             	mov    %al,0x2(%ebp)
 8049772:	83 c4 20             	add    $0x20,%esp
 8049775:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049778:	83 c3 01             	add    $0x1,%ebx
 804977b:	83 ee 01             	sub    $0x1,%esi
 804977e:	0f 85 5a ff ff ff    	jne    80496de <submitr+0x30a>
 8049784:	e9 aa 03 00 00       	jmp    8049b33 <submitr+0x75f>
 8049789:	83 ec 04             	sub    $0x4,%esp
 804978c:	53                   	push   %ebx
 804978d:	56                   	push   %esi
 804978e:	55                   	push   %ebp
 804978f:	e8 6c f0 ff ff       	call   8048800 <write@plt>
 8049794:	83 c4 10             	add    $0x10,%esp
 8049797:	85 c0                	test   %eax,%eax
 8049799:	7f 0f                	jg     80497aa <submitr+0x3d6>
 804979b:	e8 90 f0 ff ff       	call   8048830 <__errno_location@plt>
 80497a0:	83 38 04             	cmpl   $0x4,(%eax)
 80497a3:	75 0f                	jne    80497b4 <submitr+0x3e0>
 80497a5:	b8 00 00 00 00       	mov    $0x0,%eax
 80497aa:	01 c6                	add    %eax,%esi
 80497ac:	29 c3                	sub    %eax,%ebx
 80497ae:	75 d9                	jne    8049789 <submitr+0x3b5>
 80497b0:	85 ff                	test   %edi,%edi
 80497b2:	79 69                	jns    804981d <submitr+0x449>
 80497b4:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497b8:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497be:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80497c5:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 80497cc:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 80497d3:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80497da:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80497e1:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 80497e8:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 80497ef:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 80497f6:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 80497fd:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049804:	83 ec 0c             	sub    $0xc,%esp
 8049807:	ff 74 24 14          	pushl  0x14(%esp)
 804980b:	e8 90 f0 ff ff       	call   80488a0 <close@plt>
 8049810:	83 c4 10             	add    $0x10,%esp
 8049813:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049818:	e9 b9 02 00 00       	jmp    8049ad6 <submitr+0x702>
 804981d:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049821:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049825:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 804982c:	00 
 804982d:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049831:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049835:	b9 00 20 00 00       	mov    $0x2000,%ecx
 804983a:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049841:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049845:	e8 b6 fa ff ff       	call   8049300 <rio_readlineb>
 804984a:	85 c0                	test   %eax,%eax
 804984c:	7f 7d                	jg     80498cb <submitr+0x4f7>
 804984e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049852:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049858:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 804985f:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049866:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 804986d:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049874:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804987b:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049882:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049889:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049890:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049897:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 804989e:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 80498a5:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 80498ac:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 80498b2:	83 ec 0c             	sub    $0xc,%esp
 80498b5:	ff 74 24 14          	pushl  0x14(%esp)
 80498b9:	e8 e2 ef ff ff       	call   80488a0 <close@plt>
 80498be:	83 c4 10             	add    $0x10,%esp
 80498c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498c6:	e9 0b 02 00 00       	jmp    8049ad6 <submitr+0x702>
 80498cb:	83 ec 0c             	sub    $0xc,%esp
 80498ce:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 80498d5:	50                   	push   %eax
 80498d6:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80498da:	50                   	push   %eax
 80498db:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 80498e2:	50                   	push   %eax
 80498e3:	68 9b a3 04 08       	push   $0x804a39b
 80498e8:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 80498ef:	50                   	push   %eax
 80498f0:	e8 1b ef ff ff       	call   8048810 <__isoc99_sscanf@plt>
 80498f5:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 80498f9:	83 c4 20             	add    $0x20,%esp
 80498fc:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049901:	0f 84 c4 00 00 00    	je     80499cb <submitr+0x5f7>
 8049907:	83 ec 08             	sub    $0x8,%esp
 804990a:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049911:	52                   	push   %edx
 8049912:	50                   	push   %eax
 8049913:	68 ac a2 04 08       	push   $0x804a2ac
 8049918:	6a ff                	push   $0xffffffff
 804991a:	6a 01                	push   $0x1
 804991c:	ff 74 24 34          	pushl  0x34(%esp)
 8049920:	e8 9b ef ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049925:	83 c4 14             	add    $0x14,%esp
 8049928:	ff 74 24 14          	pushl  0x14(%esp)
 804992c:	e8 6f ef ff ff       	call   80488a0 <close@plt>
 8049931:	83 c4 10             	add    $0x10,%esp
 8049934:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049939:	e9 98 01 00 00       	jmp    8049ad6 <submitr+0x702>
 804993e:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049943:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 804994a:	8d 44 24 40          	lea    0x40(%esp),%eax
 804994e:	e8 ad f9 ff ff       	call   8049300 <rio_readlineb>
 8049953:	85 c0                	test   %eax,%eax
 8049955:	7f 74                	jg     80499cb <submitr+0x5f7>
 8049957:	8b 44 24 18          	mov    0x18(%esp),%eax
 804995b:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049961:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049968:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 804996f:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049976:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804997d:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049984:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 804998b:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049992:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049999:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 80499a0:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 80499a7:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 80499ae:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 80499b2:	83 ec 0c             	sub    $0xc,%esp
 80499b5:	ff 74 24 14          	pushl  0x14(%esp)
 80499b9:	e8 e2 ee ff ff       	call   80488a0 <close@plt>
 80499be:	83 c4 10             	add    $0x10,%esp
 80499c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499c6:	e9 0b 01 00 00       	jmp    8049ad6 <submitr+0x702>
 80499cb:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 80499d2:	0d 
 80499d3:	0f 85 65 ff ff ff    	jne    804993e <submitr+0x56a>
 80499d9:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 80499e0:	0a 
 80499e1:	0f 85 57 ff ff ff    	jne    804993e <submitr+0x56a>
 80499e7:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 80499ee:	00 
 80499ef:	0f 85 49 ff ff ff    	jne    804993e <submitr+0x56a>
 80499f5:	b9 00 20 00 00       	mov    $0x2000,%ecx
 80499fa:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049a01:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049a05:	e8 f6 f8 ff ff       	call   8049300 <rio_readlineb>
 8049a0a:	85 c0                	test   %eax,%eax
 8049a0c:	7f 7b                	jg     8049a89 <submitr+0x6b5>
 8049a0e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049a12:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a18:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a1f:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a26:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049a2d:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049a34:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049a3b:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049a42:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049a49:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049a50:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049a57:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049a5e:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049a65:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049a6c:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049a73:	83 ec 0c             	sub    $0xc,%esp
 8049a76:	ff 74 24 14          	pushl  0x14(%esp)
 8049a7a:	e8 21 ee ff ff       	call   80488a0 <close@plt>
 8049a7f:	83 c4 10             	add    $0x10,%esp
 8049a82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a87:	eb 4d                	jmp    8049ad6 <submitr+0x702>
 8049a89:	83 ec 08             	sub    $0x8,%esp
 8049a8c:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049a93:	50                   	push   %eax
 8049a94:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049a98:	57                   	push   %edi
 8049a99:	e8 02 ed ff ff       	call   80487a0 <strcpy@plt>
 8049a9e:	83 c4 04             	add    $0x4,%esp
 8049aa1:	ff 74 24 14          	pushl  0x14(%esp)
 8049aa5:	e8 f6 ed ff ff       	call   80488a0 <close@plt>
 8049aaa:	0f b6 17             	movzbl (%edi),%edx
 8049aad:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049ab2:	83 c4 10             	add    $0x10,%esp
 8049ab5:	29 d0                	sub    %edx,%eax
 8049ab7:	75 13                	jne    8049acc <submitr+0x6f8>
 8049ab9:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049abd:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049ac2:	29 d0                	sub    %edx,%eax
 8049ac4:	75 06                	jne    8049acc <submitr+0x6f8>
 8049ac6:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049aca:	f7 d8                	neg    %eax
 8049acc:	85 c0                	test   %eax,%eax
 8049ace:	0f 95 c0             	setne  %al
 8049ad1:	0f b6 c0             	movzbl %al,%eax
 8049ad4:	f7 d8                	neg    %eax
 8049ad6:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049add:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049ae4:	0f 84 a9 00 00 00    	je     8049b93 <submitr+0x7bf>
 8049aea:	e9 9f 00 00 00       	jmp    8049b8e <submitr+0x7ba>
 8049aef:	a1 dc a2 04 08       	mov    0x804a2dc,%eax
 8049af4:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049af8:	89 07                	mov    %eax,(%edi)
 8049afa:	a1 1b a3 04 08       	mov    0x804a31b,%eax
 8049aff:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049b02:	89 f8                	mov    %edi,%eax
 8049b04:	83 c7 04             	add    $0x4,%edi
 8049b07:	83 e7 fc             	and    $0xfffffffc,%edi
 8049b0a:	29 f8                	sub    %edi,%eax
 8049b0c:	be dc a2 04 08       	mov    $0x804a2dc,%esi
 8049b11:	29 c6                	sub    %eax,%esi
 8049b13:	83 c0 43             	add    $0x43,%eax
 8049b16:	c1 e8 02             	shr    $0x2,%eax
 8049b19:	89 c1                	mov    %eax,%ecx
 8049b1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049b1d:	83 ec 0c             	sub    $0xc,%esp
 8049b20:	ff 74 24 14          	pushl  0x14(%esp)
 8049b24:	e8 77 ed ff ff       	call   80488a0 <close@plt>
 8049b29:	83 c4 10             	add    $0x10,%esp
 8049b2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b31:	eb a3                	jmp    8049ad6 <submitr+0x702>
 8049b33:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049b3a:	50                   	push   %eax
 8049b3b:	ff 74 24 18          	pushl  0x18(%esp)
 8049b3f:	ff 74 24 18          	pushl  0x18(%esp)
 8049b43:	ff 74 24 18          	pushl  0x18(%esp)
 8049b47:	68 20 a3 04 08       	push   $0x804a320
 8049b4c:	68 00 20 00 00       	push   $0x2000
 8049b51:	6a 01                	push   $0x1
 8049b53:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049b5a:	57                   	push   %edi
 8049b5b:	e8 60 ed ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049b60:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b65:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049b6a:	f2 ae                	repnz scas %es:(%edi),%al
 8049b6c:	f7 d1                	not    %ecx
 8049b6e:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049b71:	83 c4 20             	add    $0x20,%esp
 8049b74:	89 fb                	mov    %edi,%ebx
 8049b76:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049b7d:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049b81:	85 ff                	test   %edi,%edi
 8049b83:	0f 85 00 fc ff ff    	jne    8049789 <submitr+0x3b5>
 8049b89:	e9 8f fc ff ff       	jmp    804981d <submitr+0x449>
 8049b8e:	e8 fd eb ff ff       	call   8048790 <__stack_chk_fail@plt>
 8049b93:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049b99:	5b                   	pop    %ebx
 8049b9a:	5e                   	pop    %esi
 8049b9b:	5f                   	pop    %edi
 8049b9c:	5d                   	pop    %ebp
 8049b9d:	c3                   	ret    

08049b9e <init_timeout>:
 8049b9e:	53                   	push   %ebx
 8049b9f:	83 ec 08             	sub    $0x8,%esp
 8049ba2:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049ba6:	85 db                	test   %ebx,%ebx
 8049ba8:	74 24                	je     8049bce <init_timeout+0x30>
 8049baa:	83 ec 08             	sub    $0x8,%esp
 8049bad:	68 dd 92 04 08       	push   $0x80492dd
 8049bb2:	6a 0e                	push   $0xe
 8049bb4:	e8 a7 eb ff ff       	call   8048760 <signal@plt>
 8049bb9:	85 db                	test   %ebx,%ebx
 8049bbb:	b8 00 00 00 00       	mov    $0x0,%eax
 8049bc0:	0f 48 d8             	cmovs  %eax,%ebx
 8049bc3:	89 1c 24             	mov    %ebx,(%esp)
 8049bc6:	e8 b5 eb ff ff       	call   8048780 <alarm@plt>
 8049bcb:	83 c4 10             	add    $0x10,%esp
 8049bce:	83 c4 08             	add    $0x8,%esp
 8049bd1:	5b                   	pop    %ebx
 8049bd2:	c3                   	ret    

08049bd3 <init_driver>:
 8049bd3:	57                   	push   %edi
 8049bd4:	56                   	push   %esi
 8049bd5:	53                   	push   %ebx
 8049bd6:	83 ec 28             	sub    $0x28,%esp
 8049bd9:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049bdd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049be3:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049be7:	31 c0                	xor    %eax,%eax
 8049be9:	6a 01                	push   $0x1
 8049beb:	6a 0d                	push   $0xd
 8049bed:	e8 6e eb ff ff       	call   8048760 <signal@plt>
 8049bf2:	83 c4 08             	add    $0x8,%esp
 8049bf5:	6a 01                	push   $0x1
 8049bf7:	6a 1d                	push   $0x1d
 8049bf9:	e8 62 eb ff ff       	call   8048760 <signal@plt>
 8049bfe:	83 c4 08             	add    $0x8,%esp
 8049c01:	6a 01                	push   $0x1
 8049c03:	6a 1d                	push   $0x1d
 8049c05:	e8 56 eb ff ff       	call   8048760 <signal@plt>
 8049c0a:	83 c4 0c             	add    $0xc,%esp
 8049c0d:	6a 00                	push   $0x0
 8049c0f:	6a 01                	push   $0x1
 8049c11:	6a 02                	push   $0x2
 8049c13:	e8 38 ec ff ff       	call   8048850 <socket@plt>
 8049c18:	83 c4 10             	add    $0x10,%esp
 8049c1b:	85 c0                	test   %eax,%eax
 8049c1d:	79 4e                	jns    8049c6d <init_driver+0x9a>
 8049c1f:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c25:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049c2c:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049c33:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049c3a:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049c41:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049c48:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049c4f:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049c56:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049c5d:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049c63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c68:	e9 1f 01 00 00       	jmp    8049d8c <init_driver+0x1b9>
 8049c6d:	89 c3                	mov    %eax,%ebx
 8049c6f:	83 ec 0c             	sub    $0xc,%esp
 8049c72:	68 ac a3 04 08       	push   $0x804a3ac
 8049c77:	e8 f4 eb ff ff       	call   8048870 <gethostbyname@plt>
 8049c7c:	83 c4 10             	add    $0x10,%esp
 8049c7f:	85 c0                	test   %eax,%eax
 8049c81:	75 6c                	jne    8049cef <init_driver+0x11c>
 8049c83:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c89:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049c90:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049c97:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049c9e:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049ca5:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049cac:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049cb3:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049cba:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049cc1:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049cc8:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049ccf:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049cd5:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049cd9:	83 ec 0c             	sub    $0xc,%esp
 8049cdc:	53                   	push   %ebx
 8049cdd:	e8 be eb ff ff       	call   80488a0 <close@plt>
 8049ce2:	83 c4 10             	add    $0x10,%esp
 8049ce5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cea:	e9 9d 00 00 00       	jmp    8049d8c <init_driver+0x1b9>
 8049cef:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049cf3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049cfa:	00 
 8049cfb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049d02:	00 
 8049d03:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049d0a:	00 
 8049d0b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049d12:	00 
 8049d13:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049d1a:	6a 0c                	push   $0xc
 8049d1c:	ff 70 0c             	pushl  0xc(%eax)
 8049d1f:	8b 40 10             	mov    0x10(%eax),%eax
 8049d22:	ff 30                	pushl  (%eax)
 8049d24:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049d28:	50                   	push   %eax
 8049d29:	e8 a2 ea ff ff       	call   80487d0 <__memmove_chk@plt>
 8049d2e:	66 c7 44 24 1e 3b 6e 	movw   $0x6e3b,0x1e(%esp)
 8049d35:	83 c4 0c             	add    $0xc,%esp
 8049d38:	6a 10                	push   $0x10
 8049d3a:	57                   	push   %edi
 8049d3b:	53                   	push   %ebx
 8049d3c:	e8 4f eb ff ff       	call   8048890 <connect@plt>
 8049d41:	83 c4 10             	add    $0x10,%esp
 8049d44:	85 c0                	test   %eax,%eax
 8049d46:	79 2a                	jns    8049d72 <init_driver+0x19f>
 8049d48:	83 ec 0c             	sub    $0xc,%esp
 8049d4b:	68 ac a3 04 08       	push   $0x804a3ac
 8049d50:	68 6c a3 04 08       	push   $0x804a36c
 8049d55:	6a ff                	push   $0xffffffff
 8049d57:	6a 01                	push   $0x1
 8049d59:	56                   	push   %esi
 8049d5a:	e8 61 eb ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049d5f:	83 c4 14             	add    $0x14,%esp
 8049d62:	53                   	push   %ebx
 8049d63:	e8 38 eb ff ff       	call   80488a0 <close@plt>
 8049d68:	83 c4 10             	add    $0x10,%esp
 8049d6b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d70:	eb 1a                	jmp    8049d8c <init_driver+0x1b9>
 8049d72:	83 ec 0c             	sub    $0xc,%esp
 8049d75:	53                   	push   %ebx
 8049d76:	e8 25 eb ff ff       	call   80488a0 <close@plt>
 8049d7b:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 8049d80:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 8049d84:	83 c4 10             	add    $0x10,%esp
 8049d87:	b8 00 00 00 00       	mov    $0x0,%eax
 8049d8c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049d90:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049d97:	74 05                	je     8049d9e <init_driver+0x1cb>
 8049d99:	e8 f2 e9 ff ff       	call   8048790 <__stack_chk_fail@plt>
 8049d9e:	83 c4 20             	add    $0x20,%esp
 8049da1:	5b                   	pop    %ebx
 8049da2:	5e                   	pop    %esi
 8049da3:	5f                   	pop    %edi
 8049da4:	c3                   	ret    

08049da5 <driver_post>:
 8049da5:	53                   	push   %ebx
 8049da6:	83 ec 08             	sub    $0x8,%esp
 8049da9:	8b 44 24 10          	mov    0x10(%esp),%eax
 8049dad:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8049db1:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 8049db6:	74 26                	je     8049dde <driver_post+0x39>
 8049db8:	83 ec 04             	sub    $0x4,%esp
 8049dbb:	ff 74 24 18          	pushl  0x18(%esp)
 8049dbf:	68 ba a3 04 08       	push   $0x804a3ba
 8049dc4:	6a 01                	push   $0x1
 8049dc6:	e8 75 ea ff ff       	call   8048840 <__printf_chk@plt>
 8049dcb:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049dd0:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049dd4:	83 c4 10             	add    $0x10,%esp
 8049dd7:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ddc:	eb 3e                	jmp    8049e1c <driver_post+0x77>
 8049dde:	85 c0                	test   %eax,%eax
 8049de0:	74 2c                	je     8049e0e <driver_post+0x69>
 8049de2:	80 38 00             	cmpb   $0x0,(%eax)
 8049de5:	74 27                	je     8049e0e <driver_post+0x69>
 8049de7:	83 ec 04             	sub    $0x4,%esp
 8049dea:	53                   	push   %ebx
 8049deb:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049def:	68 d1 a3 04 08       	push   $0x804a3d1
 8049df4:	50                   	push   %eax
 8049df5:	68 d9 a3 04 08       	push   $0x804a3d9
 8049dfa:	68 6e 3b 00 00       	push   $0x3b6e
 8049dff:	68 ac a3 04 08       	push   $0x804a3ac
 8049e04:	e8 cb f5 ff ff       	call   80493d4 <submitr>
 8049e09:	83 c4 20             	add    $0x20,%esp
 8049e0c:	eb 0e                	jmp    8049e1c <driver_post+0x77>
 8049e0e:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049e13:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049e17:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e1c:	83 c4 08             	add    $0x8,%esp
 8049e1f:	5b                   	pop    %ebx
 8049e20:	c3                   	ret    
 8049e21:	66 90                	xchg   %ax,%ax
 8049e23:	66 90                	xchg   %ax,%ax
 8049e25:	66 90                	xchg   %ax,%ax
 8049e27:	66 90                	xchg   %ax,%ax
 8049e29:	66 90                	xchg   %ax,%ax
 8049e2b:	66 90                	xchg   %ax,%ax
 8049e2d:	66 90                	xchg   %ax,%ax
 8049e2f:	90                   	nop

08049e30 <__libc_csu_init>:
 8049e30:	55                   	push   %ebp
 8049e31:	57                   	push   %edi
 8049e32:	56                   	push   %esi
 8049e33:	53                   	push   %ebx
 8049e34:	e8 d7 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e39:	81 c3 c7 21 00 00    	add    $0x21c7,%ebx
 8049e3f:	83 ec 0c             	sub    $0xc,%esp
 8049e42:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8049e46:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8049e4c:	e8 a3 e8 ff ff       	call   80486f4 <_init>
 8049e51:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8049e57:	29 c6                	sub    %eax,%esi
 8049e59:	c1 fe 02             	sar    $0x2,%esi
 8049e5c:	85 f6                	test   %esi,%esi
 8049e5e:	74 25                	je     8049e85 <__libc_csu_init+0x55>
 8049e60:	31 ff                	xor    %edi,%edi
 8049e62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049e68:	83 ec 04             	sub    $0x4,%esp
 8049e6b:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e6f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e73:	55                   	push   %ebp
 8049e74:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8049e7b:	83 c7 01             	add    $0x1,%edi
 8049e7e:	83 c4 10             	add    $0x10,%esp
 8049e81:	39 f7                	cmp    %esi,%edi
 8049e83:	75 e3                	jne    8049e68 <__libc_csu_init+0x38>
 8049e85:	83 c4 0c             	add    $0xc,%esp
 8049e88:	5b                   	pop    %ebx
 8049e89:	5e                   	pop    %esi
 8049e8a:	5f                   	pop    %edi
 8049e8b:	5d                   	pop    %ebp
 8049e8c:	c3                   	ret    
 8049e8d:	8d 76 00             	lea    0x0(%esi),%esi

08049e90 <__libc_csu_fini>:
 8049e90:	f3 c3                	repz ret 

Disassembly of section .fini:

08049e94 <_fini>:
 8049e94:	53                   	push   %ebx
 8049e95:	83 ec 08             	sub    $0x8,%esp
 8049e98:	e8 73 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e9d:	81 c3 63 21 00 00    	add    $0x2163,%ebx
 8049ea3:	83 c4 08             	add    $0x8,%esp
 8049ea6:	5b                   	pop    %ebx
 8049ea7:	c3                   	ret    
